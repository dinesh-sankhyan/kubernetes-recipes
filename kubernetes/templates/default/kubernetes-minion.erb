#!/bin/bash
#
# kubernetes	This shell script takes care of starting and stopping kubernetes
#
# chkconfig: - 99 99
# description: kubernetes

### BEGIN INIT INFO
# Provides: kubernetes
# Required-Start: $network $local_fs $remote_fs
# Required-Stop: $network $local_fs $remote_fs
# Should-Start: $syslog $named flanneld docker
# Should-Stop: $syslog $named
# Short-Description: start and stop kubernetes
# Description: kubernetes
### END INIT INFO

# Source function library.
. /etc/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

#prog=/usr/local/bin/hyperkube
kubelet_prog=/usr/local/bin/kubelet
proxy_prog=/usr/local/bin/kube-proxy

kubelet_lockfile=/var/lock/subsys/`basename $kubelet_prog`
proxy_lockfile=/var/lock/subsys/`basename $proxy_prog`

hostname=`hostname`
logfile=/var/log/k8s

start() {
	# Start daemon.
	echo $"Starting kubelet: "
	daemon $kubelet_prog \
		--api_servers=http://<%= @master_url %>:8080 \
		--v=2 \
		--address=0.0.0.0 \
		--enable_server \
		--hostname_override=${hostname} \
		> ${logfile}-kubelet.log 2>&1 &

	echo $"Starting proxy: "
	daemon $proxy_prog \
		--master=http://<%= @master_url %>:8080 \
		--v=2 \
		> ${logfile}-proxy.log 2>&1 &

	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch $kubelet_lockfile && touch $proxy_lockfile
	return $RETVAL
}

stop() {
	[ "$EUID" != "0" ] && exit 4
	echo -n $"Shutting down $kubelet_prog: "
	killproc $kubelet_prog

	RETVAL=$?
	echo
	
	echo -n $"Shutting down $proxy_prog: "
    killproc $proxy_prog
    
	RETVAL=$(($RETVAL&$?))
    echo

	[ $RETVAL -eq 0 ] && rm -f $kubelet_lockfile $proxy_lockfile
	return $RETVAL
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  status)
	status $prog
	;;
  restart|force-reload)
	stop
	start
	;;
  try-restart|condrestart)
	if status $prog > /dev/null; then
	    stop
	    start
	fi
	;;
  reload)
	exit 3
	;;
  *)
	echo $"Usage: $0 {start|stop|status|restart|try-restart|force-reload}"
	exit 2
esac
